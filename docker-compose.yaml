version: "3.8"
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

  # pg_admin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   depends_on:
  #     - postgres
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  
  hasura:
    image: hasura/graphql-engine:v2.38.0
    depends_on:
    - postgres
    ports:
      - "8080:8080"
    restart: on-failure
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      PG_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: 123456
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ACTION_BASE_URL: http://events:9000

  events: 
    build:
      context: ./services/events
      dockerfile: Dockerfile_dev
    ports:
    - "9000:9000"
    volumes:
    - ./services/events:/src/app
    - /src/app/node_modules/
    - ./services/shared:/src/shared
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      LOG_NAME: blue_crown
      # GOOGLE_APPLICATION_CREDENTIALS: /google-cert.json
      # LEVEL_LOG_GOOGLE: ${LEVEL_LOG_GOOGLE}
      # LEVEL_LOG: ${LEVEL_LOG}
      NODE_ENV: ${NODE_ENV}
      # SERVICE_LOG: "true"

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}

  client:
    build: 
      context: ./services/client
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: always
volumes:
  db_data:
  # pgadmin_data: